{"ast":null,"code":"var _jsxFileName = \"/Users/0x4ry4n/Desktop/Dev/sota-melanoma-detection/frontend/src/components/predictButton/PredictButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext } from \"react\";\nimport './PredictButton.css';\nimport { FileContext } from './File1';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictButton = () => {\n  _s();\n  const {\n    selectedFile,\n    setSelecte\n  } = useContext(FileContext);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"predict-button\",\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"predict-button-button\",\n      children: \"Predict!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 8,\n    columnNumber: 9\n  }, this);\n};\n_s(PredictButton, \"0L8zoww4TvEq/IXiNLD3H/gOj1s=\");\n_c = PredictButton;\nexport default PredictButton;\nvar _c;\n$RefreshReg$(_c, \"PredictButton\");","map":{"version":3,"names":["React","useContext","FileContext","PredictButton","selectedFile","setSelecte"],"sources":["/Users/0x4ry4n/Desktop/Dev/sota-melanoma-detection/frontend/src/components/predictButton/PredictButton.jsx"],"sourcesContent":["import React, { useContext } from \"react\";\nimport './PredictButton.css';\nimport { FileContext } from './File1';\n\nconst PredictButton = () => {\n    const { selectedFile, setSelecte } = useContext(FileContext);\n    return (\n        <div className=\"predict-button\">\n            <button className=\"predict-button-button\">Predict!</button>\n        </div>\n    )\n}\n\nexport default PredictButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,QAAQ,OAAO;AACzC,OAAO,qBAAqB;AAC5B,SAASC,WAAW,QAAQ,SAAS;AAAC;AAEtC,MAAMC,aAAa,GAAG,MAAM;EAAA;EACxB,MAAM;IAAEC,YAAY;IAAEC;EAAW,CAAC,GAAGJ,UAAU,CAACC,WAAW,CAAC;EAC5D,oBACI;IAAK,SAAS,EAAC,gBAAgB;IAAA,uBAC3B;MAAQ,SAAS,EAAC,uBAAuB;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA;EAAS;IAAA;IAAA;IAAA;EAAA,QACzD;AAEd,CAAC;AAAA,GAPKC,aAAa;AAAA,KAAbA,aAAa;AASnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}