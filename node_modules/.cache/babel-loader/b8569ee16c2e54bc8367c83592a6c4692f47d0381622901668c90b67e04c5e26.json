{"ast":null,"code":"var _jsxFileName = \"/Users/0x4ry4n/Desktop/Dev/sota-melanoma-detection/frontend/src/components/predictButton/PredictButton.jsx\",\n  _s = $RefreshSig$();\nimport React, { useContext, useState } from \"react\";\nimport './PredictButton.css';\nimport FileContext from \"../contexts/FileContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst PredictButton = () => {\n  _s();\n  const selectedFile = useContext(FileContext);\n  const [pred, setPred] = useState();\n  const handleUpload = async () => {\n    const formData = new FormData();\n    formData.append(\"file\", selectedFile, selectedFile.name);\n    console.log(formData);\n    console.log(selectedFile.name);\n    const requestOptions = {\n      method: 'POST',\n      body: formData\n    };\n    await fetch('http://localhost:8000/uploadfile', requestOptions);\n    // const data = await resp.json();\n  };\n\n  const handlePredict = async () => {\n    await handleUpload();\n    const requestOptions = {\n      method: 'GET'\n    };\n    const resp = await fetch(`http://localhost:8000/predict/?filename=${selectedFile.name}`, requestOptions);\n    const data = await resp.json();\n    setPred(data[\"Prediction\"]);\n    console.log(data);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"predict-button\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"predict-button-button\",\n      onClick: handlePredict,\n      children: \"Predict!\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"pred\",\n      children: pred === null ? null : pred === \"6\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"Melanoma Detected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 54\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: \"No Melanoma Detected\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 85\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n_s(PredictButton, \"E2NyprVOkDVy0rUZfUTwjJS3sdM=\");\n_c = PredictButton;\nexport default PredictButton;\nvar _c;\n$RefreshReg$(_c, \"PredictButton\");","map":{"version":3,"names":["React","useContext","useState","FileContext","PredictButton","selectedFile","pred","setPred","handleUpload","formData","FormData","append","name","console","log","requestOptions","method","body","fetch","handlePredict","resp","data","json"],"sources":["/Users/0x4ry4n/Desktop/Dev/sota-melanoma-detection/frontend/src/components/predictButton/PredictButton.jsx"],"sourcesContent":["import React, { useContext, useState } from \"react\";\nimport './PredictButton.css';\nimport FileContext from \"../contexts/FileContext\";\n\n\nconst PredictButton = () => {\n    const selectedFile = useContext(FileContext);\n    const [pred, setPred] = useState();\n\n    const handleUpload = async () => {\n        const formData = new FormData();\n        formData.append(\"file\", selectedFile, selectedFile.name);\n        console.log(formData);\n        console.log(selectedFile.name);\n\n        const requestOptions = {\n            method: 'POST',\n            body: formData,\n        };\n        await fetch('http://localhost:8000/uploadfile', requestOptions);\n        // const data = await resp.json();\n    }\n    const handlePredict = async () => {\n        await handleUpload();\n        const requestOptions = {\n            method: 'GET',\n        };\n        const resp = await fetch(`http://localhost:8000/predict/?filename=${selectedFile.name}`, requestOptions);\n        const data = await resp.json();\n        setPred(data[\"Prediction\"]);\n        console.log(data);\n    }\n    return (\n        <div className=\"predict-button\">\n            <button className=\"predict-button-button\" onClick={handlePredict}>Predict!</button>\n            {/* {Object.entries(pred).map(([key, value]) => (\n                <div key={key}>{key}: {value}</div>\n            ))} */}\n            <div className=\"pred\">\n                {pred===null ? null : pred === \"6\" ? <div>Melanoma Detected</div> : <div>No Melanoma Detected</div>}\n            </div>\n            {/* <div className=\"\">\n                {selectedFile}\n            </div> */}\n        </div>\n    )\n}\n\nexport default PredictButton;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,UAAU,EAAEC,QAAQ,QAAQ,OAAO;AACnD,OAAO,qBAAqB;AAC5B,OAAOC,WAAW,MAAM,yBAAyB;AAAC;AAGlD,MAAMC,aAAa,GAAG,MAAM;EAAA;EACxB,MAAMC,YAAY,GAAGJ,UAAU,CAACE,WAAW,CAAC;EAC5C,MAAM,CAACG,IAAI,EAAEC,OAAO,CAAC,GAAGL,QAAQ,EAAE;EAElC,MAAMM,YAAY,GAAG,YAAY;IAC7B,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,EAAE;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEN,YAAY,EAAEA,YAAY,CAACO,IAAI,CAAC;IACxDC,OAAO,CAACC,GAAG,CAACL,QAAQ,CAAC;IACrBI,OAAO,CAACC,GAAG,CAACT,YAAY,CAACO,IAAI,CAAC;IAE9B,MAAMG,cAAc,GAAG;MACnBC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAER;IACV,CAAC;IACD,MAAMS,KAAK,CAAC,kCAAkC,EAAEH,cAAc,CAAC;IAC/D;EACJ,CAAC;;EACD,MAAMI,aAAa,GAAG,YAAY;IAC9B,MAAMX,YAAY,EAAE;IACpB,MAAMO,cAAc,GAAG;MACnBC,MAAM,EAAE;IACZ,CAAC;IACD,MAAMI,IAAI,GAAG,MAAMF,KAAK,CAAE,2CAA0Cb,YAAY,CAACO,IAAK,EAAC,EAAEG,cAAc,CAAC;IACxG,MAAMM,IAAI,GAAG,MAAMD,IAAI,CAACE,IAAI,EAAE;IAC9Bf,OAAO,CAACc,IAAI,CAAC,YAAY,CAAC,CAAC;IAC3BR,OAAO,CAACC,GAAG,CAACO,IAAI,CAAC;EACrB,CAAC;EACD,oBACI;IAAK,SAAS,EAAC,gBAAgB;IAAA,wBAC3B;MAAQ,SAAS,EAAC,uBAAuB;MAAC,OAAO,EAAEF,aAAc;MAAA,UAAC;IAAQ;MAAA;MAAA;MAAA;IAAA,QAAS,eAInF;MAAK,SAAS,EAAC,MAAM;MAAA,UAChBb,IAAI,KAAG,IAAI,GAAG,IAAI,GAAGA,IAAI,KAAK,GAAG,gBAAG;QAAA,UAAK;MAAiB;QAAA;QAAA;QAAA;MAAA,QAAM,gBAAG;QAAA,UAAK;MAAoB;QAAA;QAAA;QAAA;MAAA;IAAM;MAAA;MAAA;MAAA;IAAA,QACjG;EAAA;IAAA;IAAA;IAAA;EAAA,QAIJ;AAEd,CAAC;AAAA,GAzCKF,aAAa;AAAA,KAAbA,aAAa;AA2CnB,eAAeA,aAAa;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}